# Файл должен начинаться с тега версии. Используем последнюю.
version: '3'
services:
  postgres:
    image: postgres:13-alpine
    container_name: postgres_movies
    env_file:
      - db.env
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    ports:
      # Перенаправляем запросы, поступающие к localhost:8010 на порт 8010.
      - "5432:5432"
    networks:
      - movies_network

  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_movies
    env_file:
      - django.env
    volumes:
      - static_volume:/data/static
    depends_on:
      - postgres
    ports:
      - "8010:8010"
    networks:
      - movies_network

  nginx:
#    image: nginx:1.19.2
    image: nginx:1.21
#    image: blabla_nginx

    container_name: nginx_movies
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
    depends_on:
      - django
    ports:
      - "80:80"
    networks:
      - movies_network

  elastic:
    image: elasticsearch:7.7.0
    container_name: elastic_movies
    env_file:
      - es.env
    ports:
      - "9200:9200"
    networks:
      - movies_network
    depends_on:
      - postgres

  etl:
    build:
      context: postgres_to_es
      dockerfile: Dockerfile
    container_name: etl_movies
    volumes:
      - ./postgres_to_es:/code
    networks:
      - movies_network
    command: python etl.py
    depends_on:
      - postgres
      - elastic


  redis:
    build:
      context: redis
      dockerfile: Dockerfile
    container_name: redis_movies
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./redis/conf/etc:/usr/local/etc/redis
    ports:
      - "6379:6379"
    networks:
      - movies_network
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]

  fast_api:
    build:
      context: fast_api
      dockerfile: Dockerfile
    container_name: fast_api_movies
    env_file:
      - fa.env
    volumes:
      - ./fast_api:/fast_api:ro
    networks:
      - movies_network
    ports:
      - "8000:8000"
    command: ["python", "main.py"]
    depends_on:
      - elastic
      - redis

#  flask_auth_api:
#    build:
#      context: auth_api/flask_app
#      dockerfile: Dockerfile
#    container_name: flask_auth_api
#    env_file:
#      - auth.env
#    volumes:
#      - ./auth_api/flask_app:/auth_api/flask_app
#    networks:
#      - movies_network
#    depends_on:
#      - postgres_auth
#      - redis_auth
#
#  postgres_auth:
#    image: postgres:13-alpine
#    container_name: postgres_auth
#    env_file:
#      - db_auth.env
#    volumes:
#      - ./auth_api/postgres_auth/pgdata:/var/lib/postgresql/data
#    ports:
#      - "5432:5432"
#    networks:
#      - movies_network
#
#  redis_auth:
#    build:
#      context: auth_api/redis_auth
#      dockerfile: Dockerfile
#    container_name: redis_auth
#    volumes:
#      - ./auth_api/redis_auth/conf/etc:/usr/local/etc/redis
#    #ports:
#    #- "6379:6379"
#    networks:
#      - movies_network
#    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]


# Указываем Docker, какие именованные тома потребуются сервисам
volumes:
  postgres_volume:
  static_volume:

networks:
  movies_network:

