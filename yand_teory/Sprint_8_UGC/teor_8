I.Kafka
-- скачать кафку
 git clone https://github.com/confluentinc/cp-all-in-one.git
--

II. Clickhouse
Создайте клиента, через которого будут выполняться все запросы:
from clickhouse_driver import Client

client = Client(host='localhost')


Зайдите в контейнер первого шарда и запустите клиент:
$ docker exec -it clickhouse-node1 bash
$ clickhouse-client

CREATE TABLE shard.test (id Int64, event_time DateTime) Engine=ReplicatedMergeTree('/clickhouse/tables/shard1/test', 'replica_1') PARTITION BY toYYYYMMDD(event_time) ORDER BY id;

CREATE DATABASE shard;
CREATE DATABASE replica;
CREATE TABLE shard.film_view (id UUID, user UUID, film UUID, progress_time Int64) Engine=ReplicatedMergeTree('/clickhouse/tables/shard1/film_view', 'replica_1') PARTITION BY film ORDER BY id;
CREATE TABLE replica.film_view (id UUID, user UUID, film UUID, progress_time Int64) Engine=ReplicatedMergeTree('/clickhouse/tables/shard2/film_view', 'replica_2') PARTITION BY film ORDER BY id;
CREATE TABLE default.film_view (id UUID, user UUID, film UUID, progress_time Int64) ENGINE = Distributed('company_cluster', '', film_view, rand());

docker exec -it clickhouse-node3 bash
clickhouse-client
CREATE DATABASE shard;
CREATE DATABASE replica;
CREATE TABLE shard.film_view (id UUID, user UUID, film UUID, progress_time Int64) Engine=ReplicatedMergeTree('/clickhouse/tables/shard2/film_view', 'replica_1') PARTITION BY film ORDER BY id;
CREATE TABLE replica.film_view (id UUID, user UUID, film UUID, progress_time Int64) Engine=ReplicatedMergeTree('/clickhouse/tables/shard1/film_view', 'replica_2') PARTITION BY film ORDER BY id;
CREATE TABLE default.film_view (id UUID, user UUID, film UUID, progress_time Int64) ENGINE = Distributed('company_cluster', '', film_view, rand());